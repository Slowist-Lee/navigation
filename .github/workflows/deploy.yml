name: Build and Deploy to GitHub Pages

# 触发条件:
# 1. 当有代码推送到 'main' 分支时
# 2. 允许你从 GitHub 网站的 Actions 选项卡手动运行此工作流
on:
  push:
    branches:
      - main
  workflow_dispatch:

# 权限设置: 允许此工作流写入你的仓库内容 (部署到 gh-pages 分支)
permissions:
  contents: write

jobs:
  build-and-deploy:
    # 运行环境：使用最新的 Ubuntu
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出 (Checkout) 你的仓库代码
      # 以便工作流可以访问你的 build.py, navigation.yml 等文件
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # 你可以指定任何你需要的 Python 版本
          cache: 'pip' # 缓存依赖项以加快后续构建速度

      # 步骤 3: 安装 Python 依赖库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML Jinja2

      # 步骤 4: 运行构建脚本
      # 这会生成 index.html, study.html 等文件
      - name: Build static site
        run: python build.py

      # 步骤 5: 部署到 gh-pages 分支
      # 这个 action 会处理所有复杂的 Git 操作
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          # GITHUB_TOKEN 是一个自动生成的密钥，用于授权
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 要发布的目录。因为你的 build.py 在根目录生成文件，所以这里是 '.'
          publish_dir: .
          # 自定义提交信息
          commit_message: "Deploy: Auto-generated by GitHub Actions"